Types of Deployments
Imperative Format: Using kubectl commands.

kubectl run alpha1 -n alpha --image=kiran2361993/kubegame:v1 --dry-run=client -o yaml
Declarative Format: Using YAML files.

Namespaces
Namespaces are used to divide cluster resources between multiple users.
They are useful for scenarios where multiple teams (e.g., Alpha and Bravo teams) share the same cluster but require resource isolation.

Commands
Create a namespace:

kubectl create ns alpha
kubectl create ns bravo

List API resources that are namespaced:
kubectl api-resources --namespaced=true

Services
Services provide stable IP addresses and DNS names to Pods. They allow you to expose your applications within or outside the cluster.

Commands
Expose a pod as a service:
kubectl expose pod alpha1 --port=8000 --target-port=80 --type=NodePort

Describe a service:
kubectl describe svc alpha1

Commands
Here's a quick reference for common commands used in this tutorial:

Create namespaces:
kubectl create ns alpha
kubectl create ns bravo

Create a deployment:
kubectl run alpha1 -n alpha --image=kiran2361993/kubegame:v1 --dry-run=client -o yaml

View available resources:
kubectl api-resources

Explain resources:
kubectl explain pod
kubectl explain pod.spec.affinity
List pods:
kubectl get pods
kubectl get pods -n alpha
Expose a pod:
kubectl expose pod alpha1 --port=8000 --target-port=80 --type=NodePort

Describe a service:
kubectl describe svc alpha1

